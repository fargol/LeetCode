//
//  main.cpp
//  LeetCode
//
//  Created by Hao on 2017/3/16.
//  Copyright © 2017年 Hao. All rights reserved.
//
#include <iostream>
#include <vector>
#include <numeric>      // std::iota
#include <utility>      // std::move
#include <algorithm>    // std::copy_if, std::for_each
using namespace std;
int Partition(int *A, int start, int end){
    int pivot=A[end];
    int partitionIndex=start;//set partition index as start initialy
    for(int i=start; i<end; ++i){
        if(A[i]<=pivot){
            swap(A[i],A[partitionIndex]);
            partitionIndex++;
        }
    }
    swap(A[partitionIndex],A[end]);
    return partitionIndex;
}
void QuickSort(int* A, int start, int end){
    if(start<end){
    int partitionIndex=Partition(A,start,end);
    QuickSort(A,start,partitionIndex-1);
    QuickSort(A,partitionIndex+1,end);
    
}
}
int main()
{
  int A[]={7,6,5,4,3,2,1,0};
  QuickSort(A,0,7);
  for(int i=0;i<8;i++) cout<<A[i]<<" ";
}
